import  React from 'react';
        import {Anchor,Grid} from '@lugia/lugia-web';
        import EditTables from '../../edit-table'; 
        import TAG from '@lugia/lugia-web/dist/tag/lugia.tag.zh-CN.json';
        import Demo from '../code-box';
        import Title from '../code-box/Title';
         const DefaultTag =  require('./DefaultTag').default;  const ClosableTag =  require('./ClosableTag').default;  const OptionalTag =  require('./OptionalTag').default;  
        
        const { Link } = Anchor;
        const { Row,Col } = Grid;
        
        export default class ComDemo extends React.Component {
            render(){
                return(
                    <Row>
                        <Col span={20}>
                            <Title title={'标签'} subTitle={'Tag'} desc={'标记和分类的标签'} />
                            <Demo title={'基本用法'} titleID={'tag-0'} code={<code>{ '/**\n * create by szfeng\n *\n * @flow\n */\nimport Widget from \'@lugia/lugia-web/dist/consts/index\';\nimport { Theme, Tag } from \'@lugia/lugia-web\';\nimport styled from \'styled-components\';\nimport React from \'react\';\nconst TagWrap = styled.div`\n  display: inline-block;\n  margin: 5px;\n`;\n\nexport default class DefaultTag extends React.Component<any, any> {\n  render() {\n\n    return [\n      <div>\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#4d63ff\'\n              }\n            }}\n          >\n            <Tag>标签1</Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#e8e8e8\'\n              }\n            }}\n          >\n            <Tag type={\'primary\'}>标签2</Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Tag type={\'basic\'}>标签3</Tag>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#f22735\'\n              }\n            }}\n          >\n            <Tag type={\'presets\'}>标签4</Tag>\n          </Theme>\n        </TagWrap>\n      </div>,\n      <div>\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#4d63ff\'\n              }\n            }}\n          >\n            <Tag shape={\'round\'}>标签1</Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#e8e8e8\'\n              }\n            }}\n          >\n            <Tag type={\'primary\'} shape={\'round\'}>\n              标签2\n            </Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Tag type={\'basic\'} shape={\'round\'}>\n            标签3\n          </Tag>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#f22735\'\n              }\n            }}\n          >\n            <Tag type={\'presets\'} shape={\'round\'}>\n              标签4\n            </Tag>\n          </Theme>\n        </TagWrap>\n      </div>\n    ];\n  }\n\n  onClose = () => {\n    console.log(\'close\');\n  };\n}\n'}</code>} desc={'最基本的标签,type: customs | primary | basic | presets,四种属性展示不同风格的标签。'}  demo={<DefaultTag />}></Demo><Demo title={'可关闭的标签'} titleID={'tag-1'} code={<code>{ '/**\n * create by szfeng\n *\n * @flow\n */\nimport Widget from \'@lugia/lugia-web/dist/consts/index\';\nimport { Theme, Tag } from \'@lugia/lugia-web\';\nimport styled from \'styled-components\';\nimport React from \'react\';\nconst TagWrap = styled.div`\n  display: inline-block;\n  margin: 5px;\n`;\n\nexport default class ClosableTag extends React.Component<any, any> {\n  render() {\n    const config1 = {\n      [Widget.Tag]: {\n        color: \'#ff5588\'\n      }\n    };\n\n    const config2 = {\n      [Widget.Tag]: {\n        color: \'#486fff\'\n      }\n    };\n\n    return [\n      <div>\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#4d63ff\'\n              }\n            }}\n          >\n            <Tag closable>标签1</Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#e8e8e8\'\n              }\n            }}\n          >\n            <Tag type={\'primary\'} closable>\n              标签2\n            </Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Tag type={\'basic\'} closable>\n            标签3\n          </Tag>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#f22735\'\n              }\n            }}\n          >\n            <Tag type={\'presets\'} closable>\n              标签4\n            </Tag>\n          </Theme>\n        </TagWrap>\n      </div>,\n      <div>\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#4d63ff\'\n              }\n            }}\n          >\n            <Tag shape={\'round\'} closable>\n              标签1\n            </Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#e8e8e8\'\n              }\n            }}\n          >\n            <Tag type={\'primary\'} shape={\'round\'} closable>\n              标签2\n            </Tag>\n          </Theme>\n        </TagWrap>\n\n        <TagWrap>\n          <Tag type={\'basic\'} shape={\'round\'} closable>\n            标签3\n          </Tag>\n        </TagWrap>\n\n        <TagWrap>\n          <Theme\n            config={{\n              [Widget.Tag]: {\n                color: \'#f22735\'\n              }\n            }}\n          >\n            <Tag type={\'presets\'} shape={\'round\'} closable>\n              标签4\n            </Tag>\n          </Theme>\n        </TagWrap>\n      </div>\n    ];\n  }\n\n  onClose = () => {\n    console.log(\'close\');\n  };\n}\n'}</code>} desc={'可以通过closeable变为可关闭标签,动画执行结束后触发onClose事件。'}  demo={<ClosableTag />}></Demo><Demo title={'可选择的标签'} titleID={'tag-2'} code={<code>{ '/**\n * create by szfeng\n *\n */\nimport { Tag } from \'@lugia/lugia-web\';\nimport styled from \'styled-components\';\nimport React from \'react\';\nconst TagWrap = styled.div`\n  display: inline-block;\n  margin: 5px;\n`;\n\nclass MyTag extends React.Component<any, any> {\n  constructor(props: TagProps) {\n    super(props);\n\n    this.state = {\n      checked: true\n    };\n  }\n  render() {\n    return (\n      <TagWrap>\n        <Tag\n          checked={this.state.checked}\n          type={\'optional\'}\n          onClick={this.onClick}\n        >\n          可选择标签\n        </Tag>\n      </TagWrap>\n    );\n  }\n\n  onClick = (e, checked) => {\n    this.setState({ checked });\n  };\n}\n\nexport default () => [<MyTag />, <MyTag />, <MyTag />];\n'}</code>} desc={'通过type: optional,变为可选择标签,传入checked来控制是否选中'}  demo={<OptionalTag />}></Demo>
                            <EditTables dataSource={TAG} />
                        </Col>
                        <Col span={4}>
                            <Anchor  slideType="line">
                                <Link title={'基本用法'} href={'#tag-0'} /><Link title={'可关闭的标签'} href={'#tag-1'} /><Link title={'可选择的标签'} href={'#tag-2'} />
                            </Anchor>
                        </Col>
                    </Row>
                );
            }
         }   
        
